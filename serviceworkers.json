{
  "serviceworkers":[
    {
      "id": 1,
      "description": "This simple but elegant solution pulls a file from your web server called \"offline.html\" (make sure that file is actually there) and serves the file whenever a network connection can not be made.",
      "title": "Offline page"
    },
    {
      "id": 2,
      "description": "A solution that expands the offline capabilities of your app. A copy of each pages is stored in the cache as your visitors view them. This allows a visitor to load any previously viewed page while they are offline.",
      "title": "Offline copy of pages"
    },
    {
      "id": 3,
      "description": "A copy of each pages is stored in the cache as your visitors view them. This allows a visitor to load any previously viewed page while they are offline. This then adds the \"offline page\" that allows you to customize the message and experience if the app is offline, and the page is not in the cache.",
      "title": "Offline copy with Backup offline page"
    },
    {
      "id": 4,
      "description": "Use this service worker to pre-cache content. The content you add to the \"cache-array\" will be added immediately to the cache and service from the cache whenever a page requests it. At the same time it will update the cache with the version you have on the server. Configure your file array to include all your site files, or a subset that you want to be served quickly.",
      "title": "Cache-first network"
    },
    {
      "id": 5,
      "description": "Use this service worker to improve the performance of your app, and make it work offline. The advanced caching service worker allows you to configure files and routes that are cached in different manners (pre-cache, server first, cache first, etc.). The tool can be used to build a lightning fast app (even for dynamic content) that works offline.",
      "title": "Advanced caching"
    }
  ]
}
